 private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("1");
        Random rand = new Random();
        int max=99;
        int min=0;

        int i =0;
        while (i<100) {
            int randomNum = rand.nextInt((max - min) + 1) + min;  //generate random number for column and row
            int randomNum2 = rand.nextInt((max - min) + 1) + min;
            grid[randomNum][randomNum2]=1;
            draw();
            i++;
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.out.println("2");
        Random rand = new Random();
        int max=99;
        int min=0;
        int randomNum = rand.nextInt((max - min) + 1) + min; //turn a column white
        for(int i=0;i<100;i++) {
            grid[randomNum][i]=1;
            draw();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println("3");
        for(int i=0;i<100;i++) {     //make the upper half white
            for (int j = 0; j < 50; j++) { 
               grid[i][j]=1;
               draw();
            }
        }
        for(int x=0;x<100;x++) {     //make the lower half black
            for (int y = 0; y < 50; y++) { 
                grid[x][y+50]=0;
                draw();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed



    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("4");
        int count =0;
        for(int i=0;i<100;i++) {    //count the number of white square
            for (int j = 0; j < 100; j++) {
                if (grid[i][j] == 1) {
                    count++;
                }
            }
        }


        textInfo.setText( Integer.toString(count) );
    }//GEN-LAST:event_jButton11ActionPerformed
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("5");

        clearGrid();

        for(int i=0;i<100;i++){ //colour the top left to bottom right
            grid[i][i]=1;
            draw();
        }
        for(int j=0;j<100;j++){ //colour the top right to bottom left
            grid[99-j][j]=1;
            draw();
        }
    }//GEN-LAST:event_jButton11ActionPerformed
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("6");

        for(int i=0;i<100;i++) {
            for (int j = 0; j < 100; j++) { //colour the black squares to white
                if (grid[i][j] == 1) {
                    grid[i][j]=0;
                    draw();
                }
                else {      //colour the white squares to black
                    grid[i][j]=1;
                    draw();
                }
            }
        }

    }//GEN-LAST:event_jButton11ActionPerformed
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("7");
        int[][] temp = new int[100][100];
        for(int row=0;row<100;row++)
            for(int col=0;col<100;col++)
                temp[col][row]=grid[col][row];

        for(int row=1;row<99;row++) {       //colour the squares white if touching 2 white squares
            for (int col = 1; col < 99; col++) {
                if (grid[col][row]==0 && grid[col-1][row] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col+1][row] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col][row+1] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col][row+1] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col+1][row+1] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col-1][row+1] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col+1][row-1] == 1) {
                    temp[col][row] = 1;
                }
                if (grid[col][row]==0 && grid[col-1][row-1] == 1) {
                    temp[col][row] = 1;
                }
            }
        }
        grid=temp;
        draw();
    }//GEN-LAST:event_jButton11ActionPerformed
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("8");
        int[][] temp = new int[100][100];
        for(int row=0;row<100;row++)
            for(int col=0;col<100;col++)
                temp[col][row]=grid[col][row];
        for(int row=1;row<99;row++) {
            for (int col = 1; col < 99; col++) {    //move squares to a column left

                if (grid[col][row] == 1) {
                    temp[col-1][row] = 1;
                }
                if (grid[col][row] == 0) {
                    temp[col-1][row] = 0;
                }
            }
        }
        grid=temp;
        draw();
    }//GEN-LAST:event_jButton11ActionPerformed
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        System.out.println("9");
        int[][] temp = new int[100][100];
        for(int row=0;row<100;row++)
            for(int col=0;col<100;col++)
                temp[col][row]=grid[col][row];

        int N=100;
        for (int row = 0; row < N / 2; row++) {   // rotate the grid 90 degrees
            for (int col = row; col < N - row - 1; col++) {
                if (grid[row][col] == 1) {
                    temp[N - 1 - col][row] = 1;
                }
                if (grid[row][col] == 0) {
                    temp[N - 1 - col][row] = 0;
                }
                if (grid[N - 1 - col][row] == 1) {
                    temp[N - 1 - row][N - 1 - col] = 1;
                }
                if (grid[N - 1 - col][row] == 0) {
                    temp[N - 1 - row][N - 1 - col] = 0;
                }
                if (grid[N - 1 - row][N - 1 - col] == 1) {
                    temp[col][N - 1 - row] = 1;
                }
                if (grid[N - 1 - row][N - 1 - col] == 0) {
                    temp[col][N - 1 - row] = 0;
                }
                if (grid[col][N - 1 - row] == 1) {
                    temp[row][col] = 1;
                }
                if (grid[col][N - 1 - row] == 0) {
                    temp[row][col] = 0;

                }
            }
        }
        grid=temp;

        draw();
    }//GEN-LAST:event_jButton11ActionPerformed
